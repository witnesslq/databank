<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="RoleEntity">

    <!-- 以下两个<cache>标签二选一,第一个可以输出日志,第二个不输出日志 -->
    <!--<cache type="org.mybatis.caches.ehcache.LoggingEhcache" />-->
    <!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache"/> -->

    <resultMap id="roleDetailMap" type="RoleEntity">
        <id column="ROLE_ID" property="id" jdbcType="BIGINT"/>
        <result column="ROLE_NAME" property="name" jdbcType="VARCHAR"/>
        <result column="PERMISSIONS" property="permissions" jdbcType="VARCHAR"/>
        <result column="USER_ID" property="userId" jdbcType="BIGINT"/>
    </resultMap>

    <select id="count" resultType="Long">
        SELECT
        COUNT(1)
        FROM DATABANK.TBL_DB_ROLE
        WITH UR
    </select>

    <select id="get" parameterType="Long" resultMap="roleDetailMap">
        SELECT
        *
        FROM DATABANK.TBL_DB_ROLE
        WHERE ROLE_ID = #{id}
        WITH UR
    </select>

    <select id="getRoleByUserId" parameterType="Long" resultMap="roleDetailMap">
        SELECT
        r.*
        FROM DATABANK.TBL_DB_ROLE r, DATABANK.TBL_DB_USER_ROLE tr
        WHERE r.ROLE_ID = tr.ROLE_ID AND tr.USER_ID = #{userId}
        WITH UR
    </select>


    <select id="getRoByUserId" parameterType="Long" resultMap="roleDetailMap">
        SELECT
         *
        FROM DATABANK.TBL_DB_ROLE
        WHERE  USER_ID =#{userId}
        WITH UR
    </select>


    <select id="getRoleIdsByUserId" parameterType="Long" resultType="Long">
        SELECT
        ROLE_ID
        FROM DATABANK.TBL_DB_USER_ROLE
        WHERE TBL_DB_USER_ROLE.USER_ID = #{userId} AND   TBL_DB_USER_ROLE.FLAG='1'
        WITH UR
    </select>

    <select id="getApplyRoleIdsByUserId" parameterType="Long" resultType="Long">
        SELECT
        ROLE_ID
        FROM DATABANK.TBL_DB_USER_ROLE
        WHERE TBL_DB_USER_ROLE.USER_ID = #{userId}  AND   TBL_DB_USER_ROLE.FLAG IS NULL
        WITH UR
    </select>

    <!-- 获取组权限 -->
    <select id="getAll" resultMap="roleDetailMap">
        SELECT
        *
        FROM DATABANK.TBL_DB_ROLE
        WHERE  USER_ID IS NULL
        WITH UR
    </select>

    <insert id="insert" parameterType="RoleEntity" useGeneratedKeys="true" keyProperty="id">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            VALUES NEXTVAL FOR DATABANK.SEQ_ROLE
        </selectKey>
        INSERT INTO DATABANK.TBL_DB_ROLE (ROLE_ID, ROLE_NAME, PERMISSIONS,USER_ID)
        VALUES (#{id}, #{name, jdbcType=VARCHAR}, #{permissions},#{userId})
    </insert>

    <delete id="delete" parameterType="Long">
        DELETE FROM DATABANK.TBL_DB_ROLE
        WHERE ROLE_ID = #{id}
    </delete>

    <update id="update" parameterType="RoleEntity">
        UPDATE DATABANK.TBL_DB_ROLE
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name !=''">
                ROLE_NAME = #{name},
            </if>
            PERMISSIONS = #{permissions},
        </trim>
        WHERE ROLE_ID = #{id}
    </update>


    <update id="updateByUserId" parameterType="RoleEntity">
        UPDATE DATABANK.TBL_DB_ROLE
        <trim prefix="SET" suffixOverrides=",">
            <if test="permissions != null and permissions !=''">
                PERMISSIONS = #{permissions}
            </if>
        </trim>
        WHERE USER_ID = #{userId}
    </update>


    <!-- Role-DataSource 关系 -->

    <select id="getRoleDsR" parameterType="Long" resultType="String">
		SELECT
			DS_ID
		FROM DATABANK.TBL_ROLE_DATASOURCE
		WHERE ROLE_ID = #{roleId}  AND END_DATETIME IS NULL
		 OR   ROLE_ID = #{roleId}  AND END_DATETIME >= current timestamp
		WITH UR
	</select>

    <select id="getDsByRoleId" parameterType="Long" resultType="String">
        SELECT
        DS_ID
        FROM DATABANK.TBL_ROLE_DATASOURCE
        WHERE  ROLE_ID = #{roleId}  AND END_DATETIME >= current timestamp
        WITH UR
    </select>

    <select id="getDsByRoleIdAndDsId" parameterType="map" resultType="String">
        SELECT
        DS_ID
        FROM DATABANK.TBL_ROLE_DATASOURCE
        WHERE  ROLE_ID = #{roleId}  AND DS_ID =#{dsId} AND END_DATETIME IS NOT NULL AND END_DATETIME &lt; #{endDate}
        WITH UR
    </select>

    <select id="getApplyRoleDs" parameterType="map" resultType="String">
        SELECT
        ROLE_ID
        FROM DATABANK.TBL_ROLE_DATASOURCE
        WHERE ROLE_ID = #{roleId}  AND END_DATETIME >= current timestamp  AND DS_ID=#{dsId}
        WITH UR
    </select>

    <insert id="addRoleDsR" parameterType="map">
        <if test="dsIds != null and dsIds != ''">
            INSERT INTO DATABANK.TBL_ROLE_DATASOURCE (ROLE_ID, DS_ID,END_DATETIME) VALUES
            <foreach item="dsId" index="index" collection="dsIds" separator=",">
                (#{roleId}, #{dsId},#{endDate})
            </foreach>
        </if>
    </insert>

    <delete id="deleteRoleDsR" parameterType="map">
        DELETE FROM DATABANK.TBL_ROLE_DATASOURCE
        WHERE ROLE_ID = #{roleId}
        <if test="dsIds != null">
            AND DS_ID IN
            <foreach item="dsId" index="index" collection="dsIds" separator="," open="(" close=")">
                #{dsId}
            </foreach>
        </if>
    </delete>

    <delete id="deleteRoleDsRAndTime" parameterType="map">
        DELETE FROM DATABANK.TBL_ROLE_DATASOURCE
        WHERE ROLE_ID = #{roleId}
        <if test="dsIds != null">
            AND DS_ID IN
            <foreach item="dsId" index="index" collection="dsIds" separator="," open="(" close=")">
                #{dsId}
            </foreach>
        </if>
        AND END_DATETIME IS NOT NULL
    </delete>

    <!--对表进行操作-->
    <insert id="addAllow" parameterType="map" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO DATABANK.TBL_ROLE_ALLOW_TABLE (ROLE_ID, DS_ID, SCHEMANAME,TABLENAME,END_DATETIME) VALUES
        (#{roleId}, #{dsId}, #{schemaName},#{tableName},#{endDate})
    </insert>


    <insert id="addNotAllow" parameterType="map" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO DATABANK.TBL_ROLE_NOTALLOW_TABLE (ROLE_ID, DS_ID, SCHEMANAME,TABLENAME,END_DATETIME) VALUES
        (#{roleId}, #{dsId}, #{schemaName},#{tableName},#{endDate})
    </insert>

    <delete id="deleteAllow" parameterType="map">
        DELETE FROM DATABANK.TBL_ROLE_ALLOW_TABLE WHERE ROLE_ID = #{roleId}
        <if test="dsId != null">
            AND DS_ID = #{dsId}
        </if>
        <if test="allow != null">
            and TABLENAME in
            <foreach item="item" index="index" collection="allow" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
    </delete>


    <delete id="deleteNotAllow" parameterType="map">
        DELETE FROM DATABANK.TBL_ROLE_NOTALLOW_TABLE WHERE ROLE_ID = #{roleId}
        <if test="dsId != null">
            AND DS_ID = #{dsId}
        </if>
        <if test="notAllow != null">
            and TABLENAME in
            <foreach item="item" index="index" collection="notAllow" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
    </delete>


    <select id="getAllowByRoleIdAndDsId" parameterType="map" resultType="String">
        SELECT
        TABLENAME
        FROM DATABANK.TBL_ROLE_ALLOW_TABLE
        WHERE ROLE_ID = #{roleId} AND DS_ID = #{dsId}
        WITH UR
    </select>


    <!--获取允许的表根据schema和id-->
    <select id="getAllowTableByRoleIdAndDsIdAndSchemas" parameterType="map" resultType="String">
        SELECT
        TABLENAME
        FROM DATABANK.TBL_ROLE_ALLOW_TABLE
        WHERE ROLE_ID = #{roleId} AND DS_ID = #{dsId} AND END_DATETIME IS NULL
        OR ROLE_ID = #{roleId} AND DS_ID = #{dsId} AND END_DATETIME >= CURRENT_TIMESTAMP
        <if test="schemas != null">
            AND SCHEMANAME IN
            <foreach item="schemas" index="index" collection="schemas" separator="," open="(" close=")">
                #{schemas}
            </foreach>
        </if>
        WITH UR
    </select>

    <!--获取允许的表根据schema和id-->

    <select id="getNotAllowTableByRoleIdAndDsIdAndSchemas" parameterType="map" resultType="String">
        SELECT
        TABLENAME
        FROM DATABANK.TBL_ROLE_NOTALLOW_TABLE
        WHERE ROLE_ID = #{roleId} AND DS_ID = #{dsId} AND END_DATETIME IS NULL
        OR ROLE_ID = #{roleId} AND DS_ID = #{dsId} AND END_DATETIME >= CURRENT_TIMESTAMP
        <if test="schemas != null">
            AND SCHEMANAME IN
            <foreach item="schemas" index="index" collection="schemas" separator="," open="(" close=")">
                #{schemas}
            </foreach>
        </if>
        WITH UR
    </select>


    <select id="getNotAllowByRoleIdAndDsId" parameterType="map" resultType="String">
        SELECT
        TABLENAME
        FROM DATABANK.TBL_ROLE_NOTALLOW_TABLE
        WHERE ROLE_ID = #{roleId} AND DS_ID = #{dsId}
        WITH UR
    </select>


    <!--对表中的列进行操作-->
    <insert id="addAllowColumn" parameterType="map" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO DATABANK.TBL_ROLE_ALLOW_COLUMN(ROLE_ID, DS_ID, SCHEMANAME,TABLENAME,ALLOW_COLUMN,END_DATETIME) VALUES
        (#{roleId}, #{dsId}, #{schemaName},#{tableName},#{allowCloumn},#{endDate})
    </insert>

    <insert id="addNotAllowColumn" parameterType="map" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO DATABANK.TBL_ROLE_NOTALLOW_COLUMN(ROLE_ID, DS_ID, SCHEMANAME,TABLENAME,NOTALLOW_COLUMN,END_DATETIME) VALUES
        (#{roleId}, #{dsId}, #{schemaName},#{tableName},#{notAllowColumn},#{endDate})
    </insert>

    <delete id="deleteAllowColumn" parameterType="map">
        DELETE FROM DATABANK.TBL_ROLE_ALLOW_COLUMN WHERE ROLE_ID = #{roleId}
        <if test="dsId != null">
            AND DS_ID = #{dsId}
        </if>
        <if test="allowColumn != null">
            AND ALLOW_COLUMN in
            <foreach item="item" index="index" collection="allowColumn" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
    </delete>

    <select id="getAllowColumnByRoleIdAndDsId" parameterType="map" resultType="String">
        SELECT
        ALLOW_COLUMN
        FROM DATABANK.TBL_ROLE_ALLOW_COLUMN
        WHERE ROLE_ID = #{roleId} AND DS_ID = #{dsId}
        WITH UR
    </select>

    <select id="getAllowColumnByRoleIdAndDsIdAndSchemaTable" parameterType="map" resultType="String">
        SELECT
        ALLOW_COLUMN
        FROM DATABANK.TBL_ROLE_ALLOW_COLUMN
        WHERE ROLE_ID = #{roleId} AND DS_ID = #{dsId}
        <if test="schemaName != null">
            AND SCHEMANAME=#{schemaName}
        </if>
        AND TABLENAME=#{tableName} AND END_DATETIME IS NULL
        OR ROLE_ID = #{roleId} AND DS_ID = #{dsId}
        <if test="schemaName != null">
            AND SCHEMANAME=#{schemaName}
        </if>
        AND TABLENAME=#{tableName} AND END_DATETIME >= CURRENT_TIMESTAMP
        WITH UR
    </select>


    <select id="getNotAllowColumnByRoleIdAndDsIdAndSchemaTable" parameterType="map" resultType="String">
        SELECT
        NOTALLOW_COLUMN
        FROM DATABANK.TBL_ROLE_NOTALLOW_COLUMN
        WHERE ROLE_ID = #{roleId} AND DS_ID = #{dsId}
        <if test="schemaName != null">
            AND SCHEMANAME=#{schemaName}
        </if>
        AND TABLENAME=#{tableName} AND END_DATETIME IS NULL
        OR ROLE_ID = #{roleId} AND DS_ID = #{dsId}
        <if test="schemaName != null">
            AND SCHEMANAME=#{schemaName}
        </if>
        AND TABLENAME=#{tableName} AND END_DATETIME >= CURRENT_TIMESTAMP
        WITH UR
    </select>


    <select id="getNotAllowColumnByRoleIdAndDsId" parameterType="map" resultType="String">
        SELECT
        NOTALLOW_COLUMN
        FROM DATABANK.TBL_ROLE_NOTALLOW_COLUMN
        WHERE ROLE_ID = #{roleId} AND DS_ID = #{dsId}
        WITH UR
    </select>


    <delete id="deleteNotAllowColumn" parameterType="map">
        DELETE FROM DATABANK.TBL_ROLE_NOTALLOW_COLUMN WHERE ROLE_ID = #{roleId}
        <if test="dsId != null">
            AND DS_ID = #{dsId}
        </if>
        <if test="notAllowColumn != null">
            and NOTALLOW_COLUMN in
            <foreach item="item" index="index" collection="notAllowColumn" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
    </delete>

    <!--查询表和列-->
    <select id="getAllowTableByTableName" parameterType="map" resultType="String">
        SELECT
        TABLENAME
        FROM DATABANK.TBL_ROLE_ALLOW_TABLE
        WHERE ROLE_ID = #{roleId} AND DS_ID = #{dsId} AND END_DATETIME IS NULL
        OR ROLE_ID = #{roleId} AND DS_ID = #{dsId} AND END_DATETIME >= CURRENT_TIMESTAMP
        <if test="schemas != null">
            AND SCHEMANAME = #{schemas}
        </if>
        <if test="tableName != null">
            AND TABLENAME = #{tableName}
        </if>
        AND END_DATETIME>=CURRENT_TIMESTAMP
        WITH UR
    </select>


    <select id="getNotTableByTableName" parameterType="map" resultType="String">
        SELECT
        TABLENAME
        FROM DATABANK.TBL_ROLE_NOTALLOW_TABLE
        WHERE ROLE_ID = #{roleId} AND DS_ID = #{dsId} AND END_DATETIME IS NULL
        OR ROLE_ID = #{roleId} AND DS_ID = #{dsId} AND END_DATETIME >= CURRENT_TIMESTAMP
        <if test="schemas != null">
            AND SCHEMANAME = #{schemas}
        </if>
        <if test="tableName != null">
            AND TABLENAME = #{tableName}
        </if>
        AND END_DATETIME>=CURRENT_TIMESTAMP
        WITH UR
    </select>

    <select id="getColumnByColumnName" parameterType="map" resultType="String">
        SELECT
        ALLOW_COLUMN
        FROM DATABANK.TBL_ROLE_ALLOW_COLUMN
        WHERE ROLE_ID = #{roleId} AND DS_ID = #{dsId}
        <if test="schemaName != null">
            AND SCHEMANAME=#{schemaName}
        </if>
        <if test="tableName != null">
            AND TABLENAME=#{tableName}
        </if>
        <if test="columnName != null">
            AND ALLOW_COLUMN=#{columnName}
        </if>
        AND END_DATETIME >= CURRENT_TIMESTAMP
        WITH UR
    </select>


    <select id="getNotColumnByColumnName" parameterType="map" resultType="String">
        SELECT
        NOTALLOW_COLUMN
        FROM DATABANK.TBL_ROLE_NOTALLOW_COLUMN
        WHERE ROLE_ID = #{roleId} AND DS_ID = #{dsId}
        <if test="schemaName != null">
            AND SCHEMANAME=#{schemaName}
        </if>
        <if test="tableName != null">
            AND TABLENAME=#{tableName}
        </if>
        <if test="columnName != null">
            AND NOTALLOW_COLUMN=#{columnName}
        </if>
        AND END_DATETIME >= CURRENT_TIMESTAMP
        WITH UR
    </select>
</mapper>